#!/bin/bash
#
# cn-makeover <mntpoint> <diskpath> <cnname> <ifprivate> <ipprivate> <privatemask> <cnhostname> <gateway> <fepublicip> <fehostname> <userkeyfile> <resolvfile> <logfile>
#
# Modify compute node image file.
#
# Should only be sudo run by pragma_boot
#
# V0 - 2/18/13, Cindy Zheng, zhengc@sdsc.edu
#

if [ $# -ne 13 ];
then
  exit 1
fi
mntpoint=$1
diskpath=$2
cnname=$3
ifprivate=$4
ipprivate=$5
privatemask=$6
cnhostname=$7
gateway=$8
fepublicip=$9
fehostname=${10}
userkeyfile=${11}
resolv=${12}
log=${13}

#
# Mount the disk image
#
rocksversion=$(/opt/rocks/bin/rocks report version)
if [ "$rocksversion" == "5.4.3" ] || [ "$rocksversion" == "5.5" ];
then
  /usr/bin/lomount -diskimage $diskpath -partition 1 $mntpoint
  if [ $? -ne 0 ];
  then
    echo "Failed mounting frontend VM image (/usr/bin/lomount -diskimage $diskpath -partition 1 $mntpoint returned $?), cannot continue." | tee -a $log;
    echo "Please investigate, then manually remove all host vm's in cluster $cnname" | tee -a $log;
    exit 2
  fi
else
  loopdev=$( /sbin/kpartx -av $diskpath | head -n 1 | cut -d' ' -f3 )
  mount /dev/mapper/$loopdev $mntpoint
  if [ $? -ne 0 ]
  then
    echo "Failed mounting frontend VM image (mount /dev/mapper/$loopdev returned $?), cannot continue." | tee -a $log;
    echo "Please investigate, then manually remove all host vm's in cluster $cnname" | tee -a $log;
    /sbin/kpartx -dv $diskpath;
    exit 3
  fi
fi

# Get mac address, vm-container and compute node file path
info=$(/opt/rocks/bin/rocks list host vm $cnname showdisks=y | grep $cnname)
if [ "$rocksversion" == "5.5" ];
then
   substr1=$(echo $info | awk '{print $6}')
else
   substr1=$(echo $info | awk '{print $7}')
fi
substr2=$(echo $substr1 | cut -d':' -f2)
cnvmpath=$(echo $substr2 | cut -d',' -f1)
mac=$(echo $info | awk '{print $4}')
container=$(echo $info | awk '{print $5}')
# debugging echo
echo "disk path for $cnname is $cnvmpath, mac=$mac, container=$container"

# Save original network interface files
cp $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate.sav

# Modify network interface file
sed -i "s/eth0/$ifprivate/" $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate
sed -i "s/^HWADDR.*/HWADDR=$mac/" $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate
sed -i "s/^IPADDR.*/IPADDR=$ipprivate/" $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate
sed -i "s/^NETMASK.*/NETMASK=$privatemask/" $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate
#debugging echo
/bin/cat $mntpoint/etc/sysconfig/network-scripts/ifcfg-$ifprivate

# Get old and new hostnames 
vminfo=$(/bin/grep "^HOSTNAME" $mntpoint/etc/sysconfig/network)
if [ -z "$vminfo" ];
then
  echo "Warning: cannot find the original hostname in /etc/sysconfig/network" | tee -a $log;
# This condition need to do more...
  exit 4
else
  oldhostfull=$(/bin/echo $vminfo | /bin/cut -d'=' -f2);
  oldhostshort=$(/bin/echo $oldhostfull | /bin/cut -d'.' -f1)
fi

#debugging echo
echo "oldhostfull=$oldhostfull; oldhostshort=$oldhostshort; newhostshort=$cnhostname"

#
# Modify network file
#
/bin/sed -i "s/^HOSTNAME.*/HOSTNAME=$cnhostname/" $mntpoint/etc/sysconfig/network
/bin/sed -i "s/^GATEWAY.*/GATEWAY=$gateway/" $mntpoint/etc/sysconfig/network
# debugging echo
/bin/cat $mntpoint/etc/sysconfig/network

# Modify static-route file
/bin/cp /$mntpoint/etc/sysconfig/static-routes $mntpoint/etc/sysconfig/static-routes.sav
/bin/echo "any host $fepublicip gw $gateway" > /$mntpoint/etc/sysconfig/static-routes
/bin/echo "any net 224.0.0.0 netmask 255.255.255.0 dev $ifprivate" >> /$mntpoint/etc/sysconfig/static-routes
/bin/echo "any host 255.255.255.255 dev $ifprivate" >> /$mntpoint/etc/sysconfig/static-routes
#debugging echo
/bin/cat /$mntpoint/etc/sysconfig/static-routes

# Modify resolv.conf
/bin/mv $mntpoint/etc/resolv.conf $mntpoint/etc/resolv.sav
grep search $resolv > $mntpoint/etc/resolv.conf
grep domain $resolv >> $mntpoint/etc/resolv.conf
/bin/echo "nameserver $gateway" >> $mntpoint/etc/resolv.conf
# debuggin echo
/bin/cat $mntpoint/etc/resolv.conf

# Add root and user ssh public keys
if [ -d $mntpoint/root/.ssh ];
then
  if [ -e $mntpoint/root/.ssh/authorized_keys ];
  then
    key=$(/bin/cat $userkeyfile);
    line=$(/bin/grep "$key" $mntpoint/root/.ssh/authorized_keys);
    if [ -z "$line" ];
    then
      /bin/cat $userkeyfile >> $mntpoint/root/.ssh/authorized_keys
    fi
  else
    /bin/cat $userkeyfile > $mntpoint/root/.ssh/authorized_keys;
    /bin/chown root:root $mntpoint/root/.ssh/authorized_keys;
    /bin/chmod 600 $mntpoint/root/.ssh/authorized_keys
  fi
else
  mkdir $mntpoint/root/.ssh;
  /bin/chmod 755 $mntpoint/root/.ssh;
  /bin/cat $userkeyfile > $mntpoint/root/.ssh/authorized_keys;
  /bin/chown root:root $mntpoint/root/.ssh/authorized_keys;
  /bin/chmod 600 $mntpoint/root/.ssh/authorized_keys
fi
# debugging echo
/bin/cat $mntpoint/root/.ssh/authorized_keys

# Create a new host file
cp $mntpoint/etc/hosts $mntpoint/etc/oldhosts
/bin/echo -e "127.0.0.1\tlocalhost.localdomain\tlocalhost" > $mntpoint/etc/hosts
/bin/echo -e "$fepublicip\t$fehostname" >> $mntpoint/etc/hosts
/bin/echo -e "$ipprivate\t$cnhostname.local\t$cnhostname" >> $mntpoint/etc/hosts
# debugging echo
/bin/cat $mntpoint/etc/hosts

# Modify auto.home
if [ -e $mntpoint/etc/auto.home ];
then
  /bin/sed -i "s/$oldhostshort/$newhostshort/g" $mntpoint/etc/auto.home;
# debuggin echo
  /bin/cat $mntpoint/etc/auto.home
fi

# Done with modify image
/bin/umount $mntpoint
/sbin/kpartx -dv $diskpath

# Deposit the image file
echo "scp $diskpath $container:$cnvmpath"
echo "$(date): Start scp $cnname vm image to $container" >> $log
/usr/bin/scp $diskpath $container:$cnvmpath
if [ $? -ne 0 ];
then
  echo "Failed. scp return code is $?" | tee -a $log;
  exit 6 
fi
echo "$(date): Finish scp $cnname vm image to $container" >> $log
# debugging echo
echo "Successfully exit cn-makeover"
exit 0
