#!/bin/bash
#
# vc-cleanup <action-code> other-required-info...
#     action-code: 1 - remove userkeyfile and vc xml file in user home dir
#                  2 - remove cluster
#                  3 - remove cluster and frontend image file
#                  4 - remove cluster, frontend image file, the first <seq#> of compute node image files
#     vc-cleanup <logfile> 1 <userkeyfile> <vcxmlhomepath>
#     vc-cleanup <logfile> 2 <userkeyfile> <vcxmlhomepath> <fename> <availableip>
#     vc-cleanup <logfile> 3 <userkeyfile> <vcxmlhomepath> <fename> <availableip>
#     vc-cleanup <logfile> 4 <userkeyfile> <vcxmlhomepath> <fename> <availableip> <seq#>
# It should be run by vm-deploy, and only clean up files on the frontend.
#
# V0 - 2/26/13, Cindy Zheng, zhengc@sdsc.edu
#

if [ $# -gt 7 ];
then
  echo "Too many arguments are given to vc-cleanup. Exit." | tee -a $1
  exit 1
fi
if [ $# -lt 4 ];
then
  echo "Too few arguments are given to vc-cleanup. Exit." | tee -a $1
  exit 2
fi
log=$1
action=$2
userkeyfile=$3
vcxmlhomepath=$4
fename=$5
availableip=$6
seq=$7++
# debugging echo
echo "Start cleanup. log=$log, action=$action, userkeyfile=$userkeyfile, vcxmlhomepath=$vcxmlhomepath, fename=$fename, availableip=$availableip, seq=$seq"

#
# Remove user tmp ssh key file and vm image file in user home directory
#
echo "/bin/rm -f $userkeyfile $vcxmlhomepath"
/bin/rm -f $userkeyfile $vcxmlhomepath

#
# Remove the new VC and unmark the ip# used in AvailableIP
#
if [ $action -gt 1 ];
then
  cnlist=( $(/opt/rocks/bin/rocks list cluster $fename | grep hosted-vm- | sort | awk '{print $2}') )
  ncompute=$(/opt/rocks/bin/rocks list cluster $fename | grep hosted-vm- | wc -l)
  ip=$(/opt/rocks/bin/rocks list host interface $fename | grep public | awk '{print $4}');
  /opt/rocks/bin/rocks stop host vm $fename;
  echo "/opt/rocks/bin/rocks remove host $fename";
  /opt/rocks/bin/rocks remove host $fename;
  if [ $? -ne 0 ];
  then
    echo "Failed to remove $fename and free IP#";
    echo "Please cleanup manually";
  o exit 3
  fi
  for (( i=0; i<$ncompute; i++ ))
  do
    /opt/rocks/bin/rocks stop host vm ${cnlist[$i]};
    echo "/opt/rocks/bin/rocks remove host ${cnlist[$i]}"
    /opt/rocks/bin/rocks remove host ${cnlist[$i]}
    if [ $? -ne 0 ];
    then
      echo "Failed to remove ${cnlist[$i]}";
      echo "Please cleanup manually";
  o   exit 4
    fi
  done
  sed -i "s/#$ip/$ip/" $availableip;
fi

#
# Remove the frontend image file
#
if [ $action -gt 2 ];
then
  fevmpath=$(/opt/rocks/bin/rocks list host vm $fename showdisks=y | grep $fename | cut -d' ' -f7 | cut -d':' -f2 | cut -d',' -f1);
  # debugging echo
  echo "rm -f $fevmpath";
  rm -f $fevmpath
fi

#
# Remove the compute node image file
#
if [ $action -gt 3 ];
then
  for (( i=0; i<$seq; i++ ))
  do
    info=$(/opt/rocks/bin/rocks list host vm ${cnlist[$i]} showdisks=yes | tail -1);
    container=$(echo info | awk '{print $5}');
    cnvmpath=$(echo info | awk '{print $7}' | cut -d':' -f2 | cut -d',' -f1);
    # debugging echo
    echo "/usr/bin/ssh $container rm -f $cnvmpath"
    /usr/bin/ssh $container "rm -f $cnvmpath"
  done
fi

exit 0
