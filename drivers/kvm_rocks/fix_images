#!/bin/bash -x
#
# Clem
#
# This script is used to fix a vritual image on the current machine


getAttributeFromVCfile() {
  vc_in=$1
  nodetype=$2
  attribute=$3

  echo "cat /vc/${nodetype}/domain/devices/disk/source/@${attribute}" | xmllint --shell $vc_in | grep = | awk -F \" '{print $2}'
}


if [ "x$#" != "x3" ]; then 
    echo "This script should be invoked with 3 arguments"
    exit 1
fi

function error(){
    echo -e "Error $1"
    exit 1
}

function uncompress(){
    #TODO check if the image is really gzipped
    echo Uncompressing $1
    which unpigz && cmd="unpigz" || cmd="gunzip"
    $cmd -c "$1" > "$2" || error "Unable to uncompress virtual image"
}

# tree required arguments
vc_in=$1
temp_path=$2
node_type=$3 # not used at the moment

base_path=`dirname $vc_in`

fe_disk_path=`getAttributeFromVCfile $vc_in "frontend" "file"`
fe_disk_volume=`getAttributeFromVCfile $vc_in "frontend" "volume"`
if [ "$fe_disk_path" != "" ]; then
	echo "Found file image $fe_disk_path"
	fe_source_disk=$base_path/$fe_disk_path
	
	if [ "x${fe_source_disk:(-3)}" = "x.gz" ]; then
		uncompress "$fe_source_disk" "$temp_path/${fe_disk_path%.gz}"
	else
		#dd if="$fe_source_disk" of="$temp_path/$fe_disk_path" bs=1M
		cp --sparse=always "$fe_source_disk" "$temp_path/$fe_disk_path"
	fi
	
	comp_disk_path=`getAttributeFromVCfile $vc_in "compute" "file"`
	comp_source_disk=$base_path/$comp_disk_path
	
	if [ "x${comp_disk_path:(-3)}" = "x.gz" ]; then
		uncompress "$comp_source_disk" "$temp_path/${comp_disk_path%.gz}"
	else
		#dd if="$comp_source_disk" of="$temp_path/${comp_disk_path}" bs=1M
		cp --sparse=always "$comp_source_disk" "$temp_path/${comp_disk_path}"
	fi
	echo "$temp_path/${fe_disk_path}" "$temp_path/${comp_disk_path}"
elif [ "$fe_disk_path" = "" -a "$fe_disk_volume" != "" ]; then
	echo "Found zfs volume $fe_disk_volume; no copying necessary yet" 
	echo "$fe_disk_volume" "$fe_disk_volume"
else 
	echo "No valid disk element found in $vc_in file.  Must be type file or volume."
	exit 1
fi
