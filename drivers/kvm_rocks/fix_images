#!/bin/bash
#
# Clem
#
# This script is used to fix a vritual image on the current machine



if [ "x$#" != "x3" ]; then 
    echo "This script should be invoked with 3 arguments"
    exit 1
fi

function error(){
    echo -e "Error $1"
    exit 1
}

function uncompress(){
    #TODO check if the image is really gzipped
    echo Uncompressing $1
    gunzip -c "$1" > "$2" || error "Unable to uncompress virtual image"
}

# tree required arguments
vc_in=$1
temp_path=$2
node_type=$3 # not used at the moment

base_path=`dirname $vc_in`

fe_disk_path=`echo "cat /vc/frontend/domain/devices/disk/source/@file" | xmllint --shell $vc_in | grep = | awk -F \" '{print $2}'`
fe_source_disk=$base_path/$fe_disk_path

if [ "x${fe_source_disk:(-3)}" == "x.gz" ]; then
	uncompress "$fe_source_disk" "$temp_path/${fe_disk_path%.gz}"
else
	dd if="$fe_source_disk" of="$temp_path/$fe_disk_path" bs=1M
fi

comp_disk_path=`echo "cat /vc/compute/domain/devices/disk/source/@file" | xmllint --shell $vc_in | grep = | awk -F \" '{print $2}'`
comp_source_disk=$base_path/$comp_disk_path

if [ "x${comp_disk_path:(-3)}" == "x.gz" ]; then
	uncompress "$comp_source_disk" "$temp_path/${comp_disk_path%.gz}"
else
	dd if="$comp_source_disk" of="$temp_path/${comp_disk_path}" bs=1M
fi

